[{"/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/index.jsx":"1","/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/App.jsx":"2","/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/pages/Home.jsx":"3","/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/components/SignUp.jsx":"4","/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/components/Login.jsx":"5","/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/components/Navbar.jsx":"6"},{"size":175,"mtime":1610555789104,"results":"7","hashOfConfig":"8"},{"size":2614,"mtime":1611375257598,"results":"9","hashOfConfig":"8"},{"size":3866,"mtime":1611068447674,"results":"10","hashOfConfig":"8"},{"size":1980,"mtime":1611068447669,"results":"11","hashOfConfig":"8"},{"size":1610,"mtime":1611068447667,"results":"12","hashOfConfig":"8"},{"size":1918,"mtime":1611375218493,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2rxg79",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/index.jsx",[],["28","29"],"/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/App.jsx",["30","31"],"/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/pages/Home.jsx",["32"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../pages/Home.css';\nimport '../components/mainNav.css';\n\nconst Home = () => {\n  const history = useHistory();\n  return (\n    <div className='landing-page'>\n      <div\n        className='landing-container-1'\n        style={{ backgroundImage: \"url('landing-page-images/backstage1.png')\" }}\n      >\n        <form\n          className='form1'\n          name='login-form1'\n          method='POST'\n          action='/api/users/login'\n        >\n          <div className='welcome'>\n            <h1 className='title-1'>WELCOME TO BACKSTAGE.</h1>\n            <p className='title-paragraph-1'>\n              We're here to make connecting venues and artists easier.\n            </p>\n          </div>\n          <div>\n            <button\n              className='join-button'\n              type='button'\n              onClick={() => {\n                history.push('/signup');\n              }}\n            >\n              Join Backstage.\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <div className='landing-container-back'>\n        <div className='landing-container-info-back'>\n          <h1 className='title'>Save Equipment</h1>\n          <p className='title-paragraph'>\n            No more rummaging through storage closets to take inventory.\n          </p>\n        </div>\n        <div className='landing-container-image-back'>\n          <img\n            className='landing-pic-back'\n            src='../landing-page-images/land-pic-2.png'\n            alt='backside picture of musicians playing'\n          />\n        </div>\n      </div>\n\n      <div\n        className='landing-container-3'\n        style={{\n          backgroundImage: \"url('landing-page-images/green-background.png')\",\n        }}\n      >\n        <div className='landing-container-3-info'>\n          <h1 className='title'>Easily share critical info with your artist</h1>\n          <p className='title-paragraph'>\n            Stage dimentions? Rain plans? Tell your artist know everything they\n            need to know before show time.\n          </p>\n        </div>\n        <div className='landing-container-3-image'>\n          <img\n            className='landing-pic-3'\n            src='../landing-page-images/land-pic-3.png'\n            alt='blackandwhite pic of concert with smoke'\n          />\n        </div>\n      </div>\n\n      <div className='landing-container-back'>\n        <div className='landing-container-info-back'>\n          <h1 className='title'>Share stage plots</h1>\n          <p className='title-paragraph'>\n            Prepare your stage based on direct artist input for a smooth,\n            music-filled night.\n          </p>\n        </div>\n        <div className='landing-container-image-back'>\n          <img\n            className='landing-pic-back'\n            src='../landing-page-images/land-pic-4.png'\n            alt='dj icon'\n          />\n        </div>\n      </div>\n\n      <div\n        className='landing-container-5'\n        style={{\n          backgroundImage: \"url('landing-page-images/white-background.png')\",\n        }}\n      >\n        <div className='landing-container-5-info'>\n          <h1 className='title-2'>\n            Save all of your stage configurations for easy sharing\n          </h1>\n          <p className='title-paragraph-2'>\n            Multiple stages? Multiple ways to set up a single stage? Share all\n            the right info with your artist in one click.\n          </p>\n        </div>\n        <div className='landing-container-5-image'>\n          <img\n            className='landing-pic-5'\n            src='../landing-page-images/jojo.jpg'\n            alt='DJ'\n          />\n        </div>\n      </div>\n\n      <div className='landing-footer'>\n        <div className='landing-footer-info'></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/components/SignUp.jsx",[],"/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/components/Login.jsx",[],"/Users/melaniechongqui/Desktop/Portfolio/backstage3/client/src/components/Navbar.jsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":52,"column":7,"nodeType":"39","endLine":52,"endColumn":41},{"ruleId":"37","severity":1,"message":"38","line":86,"column":7,"nodeType":"39","endLine":86,"endColumn":74},{"ruleId":"40","severity":1,"message":"41","line":48,"column":11,"nodeType":"39","endLine":52,"endColumn":13},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]