[{"/Users/Zjolie/CodeProjects/backstage2/client/src/index.jsx":"1","/Users/Zjolie/CodeProjects/backstage2/client/src/App.jsx":"2","/Users/Zjolie/CodeProjects/backstage2/client/src/pages/Home.jsx":"3","/Users/Zjolie/CodeProjects/backstage2/client/src/components/Login.jsx":"4","/Users/Zjolie/CodeProjects/backstage2/client/src/components/SignUp.jsx":"5","/Users/Zjolie/CodeProjects/backstage2/client/src/pages/Dashboard.jsx":"6","/Users/Zjolie/CodeProjects/backstage2/client/src/components/events/MyEvents.jsx":"7","/Users/Zjolie/CodeProjects/backstage2/client/src/components/equipment/MyEquipment.jsx":"8","/Users/Zjolie/CodeProjects/backstage2/client/src/components/stages/MyStages.jsx":"9","/Users/Zjolie/CodeProjects/backstage2/client/src/components/stages/NewStage.jsx":"10","/Users/Zjolie/CodeProjects/backstage2/client/src/venueEquip.js":"11","/Users/Zjolie/CodeProjects/backstage2/client/src/components/stages/StageDetails.jsx":"12","/Users/Zjolie/CodeProjects/backstage2/client/src/components/events/CreateEvent.jsx":"13","/Users/Zjolie/CodeProjects/backstage2/client/src/components/events/EventLink.jsx":"14"},{"size":175,"mtime":1610558540776,"results":"15","hashOfConfig":"16"},{"size":2547,"mtime":1611599835166,"results":"17","hashOfConfig":"16"},{"size":3866,"mtime":1611068521962,"results":"18","hashOfConfig":"16"},{"size":1610,"mtime":1611068521959,"results":"19","hashOfConfig":"16"},{"size":1980,"mtime":1611068521961,"results":"20","hashOfConfig":"16"},{"size":2781,"mtime":1611712457320,"results":"21","hashOfConfig":"16"},{"size":2019,"mtime":1611712456600,"results":"22","hashOfConfig":"16"},{"size":7992,"mtime":1611599258382,"results":"23","hashOfConfig":"16"},{"size":2786,"mtime":1611707836642,"results":"24","hashOfConfig":"16"},{"size":3260,"mtime":1611697755308,"results":"25","hashOfConfig":"16"},{"size":1555,"mtime":1611334199028,"results":"26","hashOfConfig":"16"},{"size":3774,"mtime":1611700147701,"results":"27","hashOfConfig":"16"},{"size":4485,"mtime":1611712456499,"results":"28","hashOfConfig":"16"},{"size":1185,"mtime":1611712456543,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"h8iwun",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"/Users/Zjolie/CodeProjects/backstage2/client/src/index.jsx",[],["65","66"],"/Users/Zjolie/CodeProjects/backstage2/client/src/App.jsx",["67","68"],"import React, { useState } from 'react';\n// import { AppContextProvider } from './context/AppContext';\nimport Home from './pages/Home';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// import MainNav from './components/Navbar';\nimport Dashboard from './pages/Dashboard';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\n// import ArtistCollab from './pages/collaboration/ArtistCollab';\nimport './pages/Home.css';\nimport { ReactComponent as ProfileIcon } from './icons/dj.svg';\nimport { ReactComponent as MessengerIcon } from './icons/messenger-icon.svg';\nimport { ReactComponent as SettingsIcon } from './icons/settings.svg';\nimport { ReactComponent as LogoutIcon } from './icons/logout.svg';\nimport { ReactComponent as MyProfileIcon } from './icons/profile-icon.svg';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    // <AppContextProvider>\n    <BrowserRouter>\n      <Navbar>\n        <Link to='/' className='mainNav-logo'>\n          BACKSTAGE\n        </Link>\n        <NavItem icon={<MessengerIcon />} />\n        <NavItem icon={<ProfileIcon />}>\n          <DropdownMenu />\n        </NavItem>\n      </Navbar>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/signup' component={SignUp} />\n\n        <Route exact path='/login' component={Login} />\n        <Route path='/dashboard' component={Dashboard} />\n        {/* <Route path=\"/artist\" component={ArtistCollab} /> */}\n      </Switch>\n    </BrowserRouter>\n    // </AppContextProvider>\n  );\n}\n\nfunction DropdownMenu() {\n  function DropdownItem(props) {\n    return (\n      <a href='#' className='menu-item'>\n        <span className='icon-button'>{props.leftIcon}</span>\n        {props.children}\n\n        <span className='icon-right'>{props.rightIcon}</span>\n      </a>\n    );\n  }\n  return (\n    <div className='dropdown'>\n      <DropdownItem leftIcon={<MyProfileIcon />}>Loggin</DropdownItem>\n      <DropdownItem leftIcon={<LogoutIcon />}>Logout</DropdownItem>\n      <DropdownItem leftIcon={<SettingsIcon />}>Settings</DropdownItem>\n    </div>\n  );\n}\n\nfunction Navbar(props) {\n  return (\n    <nav className='navbar'>\n      <ul className='navbar-nav'> {props.children}</ul>\n    </nav>\n  );\n}\n\nfunction NavItem(props) {\n  const [open, setOpen] = useState(false);\n  return (\n    <li className='nav-item'>\n      <a href='#' className='icon-button' onClick={() => setOpen(!open)}>\n        {props.icon}\n      </a>\n\n      {open && props.children}\n    </li>\n  );\n}\n\nexport default App;\n","/Users/Zjolie/CodeProjects/backstage2/client/src/pages/Home.jsx",["69"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../pages/Home.css';\nimport '../components/mainNav.css';\n\nconst Home = () => {\n  const history = useHistory();\n  return (\n    <div className='landing-page'>\n      <div\n        className='landing-container-1'\n        style={{ backgroundImage: \"url('landing-page-images/backstage1.png')\" }}\n      >\n        <form\n          className='form1'\n          name='login-form1'\n          method='POST'\n          action='/api/users/login'\n        >\n          <div className='welcome'>\n            <h1 className='title-1'>WELCOME TO BACKSTAGE.</h1>\n            <p className='title-paragraph-1'>\n              We're here to make connecting venues and artists easier.\n            </p>\n          </div>\n          <div>\n            <button\n              className='join-button'\n              type='button'\n              onClick={() => {\n                history.push('/signup');\n              }}\n            >\n              Join Backstage.\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <div className='landing-container-back'>\n        <div className='landing-container-info-back'>\n          <h1 className='title'>Save Equipment</h1>\n          <p className='title-paragraph'>\n            No more rummaging through storage closets to take inventory.\n          </p>\n        </div>\n        <div className='landing-container-image-back'>\n          <img\n            className='landing-pic-back'\n            src='../landing-page-images/land-pic-2.png'\n            alt='backside picture of musicians playing'\n          />\n        </div>\n      </div>\n\n      <div\n        className='landing-container-3'\n        style={{\n          backgroundImage: \"url('landing-page-images/green-background.png')\",\n        }}\n      >\n        <div className='landing-container-3-info'>\n          <h1 className='title'>Easily share critical info with your artist</h1>\n          <p className='title-paragraph'>\n            Stage dimentions? Rain plans? Tell your artist know everything they\n            need to know before show time.\n          </p>\n        </div>\n        <div className='landing-container-3-image'>\n          <img\n            className='landing-pic-3'\n            src='../landing-page-images/land-pic-3.png'\n            alt='blackandwhite pic of concert with smoke'\n          />\n        </div>\n      </div>\n\n      <div className='landing-container-back'>\n        <div className='landing-container-info-back'>\n          <h1 className='title'>Share stage plots</h1>\n          <p className='title-paragraph'>\n            Prepare your stage based on direct artist input for a smooth,\n            music-filled night.\n          </p>\n        </div>\n        <div className='landing-container-image-back'>\n          <img\n            className='landing-pic-back'\n            src='../landing-page-images/land-pic-4.png'\n            alt='dj icon'\n          />\n        </div>\n      </div>\n\n      <div\n        className='landing-container-5'\n        style={{\n          backgroundImage: \"url('landing-page-images/white-background.png')\",\n        }}\n      >\n        <div className='landing-container-5-info'>\n          <h1 className='title-2'>\n            Save all of your stage configurations for easy sharing\n          </h1>\n          <p className='title-paragraph-2'>\n            Multiple stages? Multiple ways to set up a single stage? Share all\n            the right info with your artist in one click.\n          </p>\n        </div>\n        <div className='landing-container-5-image'>\n          <img\n            className='landing-pic-5'\n            src='../landing-page-images/jojo.jpg'\n            alt='DJ'\n          />\n        </div>\n      </div>\n\n      <div className='landing-footer'>\n        <div className='landing-footer-info'></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/Zjolie/CodeProjects/backstage2/client/src/components/Login.jsx",[],"/Users/Zjolie/CodeProjects/backstage2/client/src/components/SignUp.jsx",[],"/Users/Zjolie/CodeProjects/backstage2/client/src/pages/Dashboard.jsx",[],"/Users/Zjolie/CodeProjects/backstage2/client/src/components/events/MyEvents.jsx",["70"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../events/events.css';\n\nconst MyEvents = () => {\n  const [events, setEvents] = useState(null);\n  const [isUpdated, setIsUpdated] = useState(false);\n\n  const getEvents = async () => {\n    try {\n      let res = await axios({\n        method: 'GET',\n        url: `/api/events`,\n      });\n      setEvents(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getEvents();\n  }, [isUpdated]);\n\n  return (\n    <div className='my-events-con'>\n      <div className='dash-title-bar'>\n        <button className='btn-4'>Add A New Event</button>\n      </div>\n\n      <div\n        className='saved-event-area'\n        // style={{ marginTop: '4rem' }}\n      >\n        {events?.map(event1 => {\n          return (\n            <div className='saved-event-card-area'>\n              <div className='saved-event-inner-card-area'>\n                <div className='saved-event-inner-card-text-area'>\n                  <h2 className='dash-h2'>{event1?.eventTitle}</h2>\n                  <br />\n                  <span className='saved-event-card-custom-date'>\n                    {moment(event1?.eventDate).format('MMMM Do YYYY')}\n                  </span>\n                  <br />\n                  {\n                    <span\n                      style={\n                        event1?.hasBeenOpened\n                          ? { color: 'green', fontWeight: '600' }\n                          : { color: 'red', fontWeight: '600' }\n                      }\n                    >\n                      {event1?.hasBeenOpened\n                        ? 'Opened by Artist'\n                        : 'Not Opened'}\n                    </span>\n                  }\n                  <br />\n                </div>\n                <div className='saved-event-card-last'></div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default MyEvents;\n","/Users/Zjolie/CodeProjects/backstage2/client/src/components/equipment/MyEquipment.jsx",["71"],"import axios from 'axios';\nimport React from 'react';\nimport equipLists, { sort } from '../../venueEquip';\nimport swal from 'sweetalert';\nimport '../equipment/myEquipment.css';\n\nconst categoryList = [\n  'Audio Cables',\n  'DJ Equipment',\n  'Microphones',\n  'Monitor Speakers',\n  'Stands',\n  'Direct Input Boxs',\n  'Instruments',\n];\n\nfunction EquipWithDescription(index, item, description) {\n  this.index = index;\n  this.item = item;\n  this.description = description;\n}\n\nfunction EquipWithQuantity(index, item, quantity) {\n  this.index = index;\n  this.item = item;\n  this.quantity = quantity;\n}\n\nlet descriptionArray = [];\nlet quantityArray = [];\n\nlet uniqueDescriptionArray = [];\nlet uniqueQuantityArray = [];\n\nclass MyEquipment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeCategory: equipLists[0],\n      equipNames: [],\n      equipObj: {},\n      equipArray: [],\n      existingEquip: [],\n      isUpdated: true,\n    };\n  }\n\n  async componentDidMount() {\n    this.getExistingEquip();\n  }\n\n  getExistingEquip = async () => {\n    await axios\n      .get('/api/equipment')\n      .then(results => this.setState({ existingEquip: results.data }));\n  };\n\n  handleCategorySelect = event => {\n    this.setState({ activeCategory: equipLists[event.target.value] });\n  };\n\n  handleEquipClick = event => {\n    if (!this.state.equipNames.includes(event.target.value)) {\n      this.setState({\n        equipNames: this.state.equipNames.concat(event.target.value),\n      });\n    } else {\n      swal(`${event.target.value} already selected. Adjust quantity instead`, {\n        icon: 'warning',\n      });\n    }\n  };\n\n  handleEquipDelete = index => {\n    let newEquipNames = this.state.equipNames;\n    newEquipNames.splice(index, 1);\n    this.setState({ equipNames: newEquipNames });\n  };\n\n  handleDescriptionChange = (event, index) => {\n    const equipWithDescription = new EquipWithDescription(\n      index,\n      event.target.name,\n      event.target.value\n    );\n    descriptionArray.push(equipWithDescription);\n  };\n  handleQuantityChange = (event, index) => {\n    const equipWithQuantity = new EquipWithQuantity(\n      index,\n      event.target.name,\n      event.target.value\n    );\n    quantityArray.push(equipWithQuantity);\n  };\n\n  handleSave = async event => {\n    event.preventDefault();\n    this.getExistingEquip();\n    const sortedDescriptionArray = descriptionArray.sort((a, b) => {\n      return a.index < b.index ? -1 : 1;\n    });\n    for (let i = 0; i < sortedDescriptionArray.length; i++) {\n      if (\n        sortedDescriptionArray[i]?.index !==\n        sortedDescriptionArray[i + 1]?.index\n      ) {\n        uniqueDescriptionArray.push(descriptionArray[i]);\n      }\n    }\n\n    uniqueDescriptionArray.forEach((obj, index) => {\n      if (!this.state.equipNames.includes(obj.item)) {\n        uniqueDescriptionArray.splice(index, 1);\n      }\n    });\n\n    const sortedQuantityArray = quantityArray.sort((a, b) => {\n      return a.index < b.index ? -1 : 1;\n    });\n    for (let i = 0; i < sortedQuantityArray.length; i++) {\n      if (sortedQuantityArray[i]?.index !== sortedQuantityArray[i + 1]?.index) {\n        uniqueQuantityArray.push(quantityArray[i]);\n      }\n    }\n    uniqueQuantityArray.forEach((obj, index) => {\n      if (!this.state.equipNames.includes(obj.item)) {\n        uniqueQuantityArray.splice(index, 1);\n      }\n    });\n    await axios\n      .post('/api/equipment', { uniqueDescriptionArray, uniqueQuantityArray })\n      .then(swal('Equipment list saved', { icon: 'success' }));\n    this.setState({ isUpdated: !this.state.isUpdated });\n  };\n\n  render() {\n    return (\n      <div className='my-equipment-con'>\n        <div className='my-equipment-component'>\n          <div className='existing-equip-list'>\n            <h2 className='your-equipment-title'>Your Equipment</h2>\n            {this.state.existingEquip?.map(item => {\n              return (\n                <div className='equipp-1'>\n                  <span className='equipp-2'>{item.name}</span>\n\n                  <span className='equipp-3'>{item.quantity}</span>\n                </div>\n              );\n            })}\n          </div>\n\n          <form\n            className='equipment-form-container'\n            name='equipmentList'\n            onSubmit={this.handleSave}\n          >\n            <div className='equipp-4'>\n              <h1 className='add-equipment-title'>Add Equipment</h1>\n              <div className='equipment-category-dropdown'>\n                <select\n                  className='category-drop-menu'\n                  onChange={this.handleCategorySelect}\n                >\n                  {categoryList.map(item => (\n                    <option value={categoryList.indexOf(item)}>{item}</option>\n                  ))}\n                </select>\n              </div>\n              <div className='equipment-category-btn-area'>\n                {this.state.activeCategory.map((item, index) => (\n                  <button\n                    className='btn-2'\n                    key={index}\n                    type='button'\n                    value={item.name}\n                    onClick={event => this.handleEquipClick(event)}\n                  >\n                    {item.name}\n                  </button>\n                ))}\n              </div>\n\n              <div className='button-mapping-area'>\n                <div\n                  className='button-mapping'\n                  // style={{ minWidth: '38rem', maxWidth: '38rem' }}\n                >\n                  {this.state.equipNames.map((item, index) => {\n                    return (\n                      <div className='equipment-align-buttons'>\n                        <span\n                          className='equipment-text-special'\n                          // style={{ text-lg color: '#FFF7F1', width: '10rem' }}\n                        >\n                          {item}\n                        </span>\n                        <input\n                          className='equipment-description-box'\n                          placeholder='description'\n                          name={item}\n                          type='text'\n                          // size=\"24\"\n                          onBlur={event =>\n                            this.handleDescriptionChange(event, index)\n                          }\n                          style={{ height: '3rem', color: 'black' }}\n                        />\n                        <input\n                          className='equipment-quantity-box'\n                          placeholder='quantity'\n                          name={item}\n                          required\n                          // min=\"0\"\n                          // size=\"4\"\n                          type='number'\n                          onBlur={event =>\n                            this.handleQuantityChange(event, index)\n                          }\n                        />\n                        <svg\n                          // className=\"delete-button\"\n                          xmlns='http://www.w3.org/2000/svg'\n                          fill='none'\n                          viewBox='0 0 24 24'\n                          stroke='#A6271F'\n                          width='40'\n                          onClick={() => this.handleEquipDelete(index)}\n                        >\n                          <path\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={2}\n                            d='M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z'\n                          />\n                        </svg>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <button className='btn-1' type='submit'>\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MyEquipment;\n","/Users/Zjolie/CodeProjects/backstage2/client/src/components/stages/MyStages.jsx",[],"/Users/Zjolie/CodeProjects/backstage2/client/src/components/stages/NewStage.jsx",[],"/Users/Zjolie/CodeProjects/backstage2/client/src/venueEquip.js",[],"/Users/Zjolie/CodeProjects/backstage2/client/src/components/stages/StageDetails.jsx",["72"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport '../stages/stages.css';\n\nconst StageDetails = () => {\n  const [currentStage, setCurrentStage] = useState({});\n  const [stageData, setStageData] = useState(null);\n  const history = useHistory();\n\n  const getStageDetails = () => {\n    const stageId = history.location.pathname.slice(18);\n    axios\n      .get(`/api/stages/${stageId}`)\n      .then(results => setCurrentStage(results.data))\n      .catch(error => swal('Operation failed', { icon: 'error' }));\n  };\n  useEffect(() => {\n    getStageDetails();\n  }, []);\n  const handleChange = async event => {\n    setStageData({ ...stageData, [event.target.name]: event.target.value });\n  };\n  const handleUpdateStage = async () => {\n    const stageId = history.location.pathname.slice(18);\n    await axios\n      .patch(`/api/stages/${stageId}`, stageData)\n      .then(results => console.log(results));\n    swal('Stage Updated!', { icon: 'success' });\n    history.push('/dashboard/stages');\n  };\n  return (\n    <div className='new-stage-full'>\n      <div>\n        <div className=''>\n          <input\n            className='stage-name-input'\n            cols='75'\n            rows='10'\n            name='name'\n            type='text'\n            defaultValue={currentStage?.name}\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div className='new-stage-dimensions'>\n          <h3 className='dash-h3'>Stage Dimensions</h3>\n        </div>\n        <div className='new-stage-area'>\n          <label for='width'>Width</label>\n          <input\n            className='stage-width'\n            name='width'\n            id='width'\n            type='number'\n            defaultValue={currentStage?.width}\n            onChange={handleChange}\n          />\n          <br />\n          <label for='depth'>Depth</label>\n          <input\n            className='stage-depth'\n            name='depth'\n            id='depth'\n            type='number'\n            defaultValue={currentStage?.depth}\n            onChange={handleChange}\n          />\n        </div>\n        <div className='new-stage-place'>\n          <label for='isOutoor' className='dash-h4'>\n            Indoor/Outdoor\n          </label>\n          {currentStage.isOutdoor ? (\n            <select className='drop-stage'>\n              <option value='true' name='isOutdoor'>\n                Outdoor\n              </option>\n              <option value='false' name='isOutdoor'>\n                Indoor\n              </option>\n            </select>\n          ) : (\n            <select className='drop-stage'>\n              <option value='false' name='isOutdoor'>\n                Indoor\n              </option>\n              <option value='true' name='isOutdoor'>\n                Outdoor\n              </option>\n            </select>\n          )}\n        </div>\n        <br />\n        <div className='comment-box'>\n          <div className='new-stage-comments-title'>\n            <label className='dash-h3' for='comments-text-area'>\n              Comments\n            </label>\n          </div>\n          <div className='new-stage-comments'>\n            <textarea\n              id='comments-text-area'\n              name='comments'\n              rows='5'\n              cols='75'\n              placeholder='Comments about this stage'\n              onChange={handleChange}\n            />\n            <br />\n          </div>\n          <br />\n        </div>\n        <div className='new-stage-button-box'>\n          <button className='new-stage-button' onClick={handleUpdateStage}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default StageDetails;\n","/Users/Zjolie/CodeProjects/backstage2/client/src/components/events/CreateEvent.jsx",[],"/Users/Zjolie/CodeProjects/backstage2/client/src/components/events/EventLink.jsx",["73"],"import React from 'react';\nimport { useClipboard } from 'use-clipboard-hook';\nimport swal from 'sweetalert';\nimport clipboard from '../../assets/clipboard.png';\nimport '../events/events.css';\n\nconst EventLink = ({ display, eventURL }) => {\n  const showLinkClassName = display ? 'block' : 'none';\n\n  const { ref, copy } = useClipboard({\n    onSuccess: text =>\n      swal(`Copied event link!`, {\n        icon: 'success',\n        buttonColor: '#15438c',\n      }),\n  });\n\n  return (\n    <div className={showLinkClassName} className='flex w-full justify-center'>\n      <input\n        readonly\n        type='text'\n        id='price'\n        className='focus:outline-none text-sm'\n        value={eventURL}\n        ref={ref}\n        style={{\n          backgroundColor: '#FFF7F1',\n          textAlign: 'center',\n          height: '35px',\n          width: '80%',\n          overflow: 'scroll',\n          marginBottom: '1.5rem',\n          justifySelf: 'center',\n        }}\n      />\n      <img\n        style={{ cursor: 'pointer', height: '30px', display: 'inline-flex' }}\n        onClick={copy}\n        src={clipboard}\n        alt='clipboard'\n      />\n    </div>\n  );\n};\n\nexport default EventLink;\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":48,"column":7,"nodeType":"80","endLine":48,"endColumn":41},{"ruleId":"78","severity":1,"message":"79","line":77,"column":7,"nodeType":"80","endLine":77,"endColumn":74},{"ruleId":"81","severity":1,"message":"82","line":48,"column":11,"nodeType":"80","endLine":52,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":8,"column":21,"nodeType":"85","messageId":"86","endLine":8,"endColumn":33},{"ruleId":"83","severity":1,"message":"87","line":3,"column":22,"nodeType":"85","messageId":"86","endLine":3,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":21,"column":6,"nodeType":"90","endLine":21,"endColumn":8,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":19,"column":40,"nodeType":"94","endLine":19,"endColumn":78},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'setIsUpdated' is assigned a value but never used.","Identifier","unusedVar","'sort' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStageDetails'. Either include it or remove the dependency array.","ArrayExpression",["97"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [getStageDetails]",{"range":"100","text":"101"},[672,674],"[getStageDetails]"]